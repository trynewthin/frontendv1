/**
 * 智选车API文档
 * 智选车汽车推荐购买平台API文档
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import ApiResponse from './model/ApiResponse';
import ApiResponseDealer from './model/ApiResponseDealer';
import ApiResponseObject from './model/ApiResponseObject';
import ApiResponseUser from './model/ApiResponseUser';
import ApiResponseUserPreference from './model/ApiResponseUserPreference';
import CarDTO from './model/CarDTO';
import CarDetailDTO from './model/CarDetailDTO';
import ContentAuditDTO from './model/ContentAuditDTO';
import Dealer from './model/Dealer';
import DealerAuditDTO from './model/DealerAuditDTO';
import DealerDTO from './model/DealerDTO';
import LoginDTO from './model/LoginDTO';
import PasswordUpdateDTO from './model/PasswordUpdateDTO';
import PreferenceDTO from './model/PreferenceDTO';
import Result from './model/Result';
import UploadCarImageRequest from './model/UploadCarImageRequest';
import User from './model/User';
import UserDTO from './model/UserDTO';
import UserPreference from './model/UserPreference';
import UserProfileDTO from './model/UserProfileDTO';
import UserStatusDTO from './model/UserStatusDTO';
import DefaultApi from './api/DefaultApi';


/**
* 智选车汽车推荐购买平台API文档.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var Api = require('index'); // See note below*.
* var xxxSvc = new Api.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new Api.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new Api.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new Api.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The ApiResponse model constructor.
     * @property {module:model/ApiResponse}
     */
    ApiResponse,

    /**
     * The ApiResponseDealer model constructor.
     * @property {module:model/ApiResponseDealer}
     */
    ApiResponseDealer,

    /**
     * The ApiResponseObject model constructor.
     * @property {module:model/ApiResponseObject}
     */
    ApiResponseObject,

    /**
     * The ApiResponseUser model constructor.
     * @property {module:model/ApiResponseUser}
     */
    ApiResponseUser,

    /**
     * The ApiResponseUserPreference model constructor.
     * @property {module:model/ApiResponseUserPreference}
     */
    ApiResponseUserPreference,

    /**
     * The CarDTO model constructor.
     * @property {module:model/CarDTO}
     */
    CarDTO,

    /**
     * The CarDetailDTO model constructor.
     * @property {module:model/CarDetailDTO}
     */
    CarDetailDTO,

    /**
     * The ContentAuditDTO model constructor.
     * @property {module:model/ContentAuditDTO}
     */
    ContentAuditDTO,

    /**
     * The Dealer model constructor.
     * @property {module:model/Dealer}
     */
    Dealer,

    /**
     * The DealerAuditDTO model constructor.
     * @property {module:model/DealerAuditDTO}
     */
    DealerAuditDTO,

    /**
     * The DealerDTO model constructor.
     * @property {module:model/DealerDTO}
     */
    DealerDTO,

    /**
     * The LoginDTO model constructor.
     * @property {module:model/LoginDTO}
     */
    LoginDTO,

    /**
     * The PasswordUpdateDTO model constructor.
     * @property {module:model/PasswordUpdateDTO}
     */
    PasswordUpdateDTO,

    /**
     * The PreferenceDTO model constructor.
     * @property {module:model/PreferenceDTO}
     */
    PreferenceDTO,

    /**
     * The Result model constructor.
     * @property {module:model/Result}
     */
    Result,

    /**
     * The UploadCarImageRequest model constructor.
     * @property {module:model/UploadCarImageRequest}
     */
    UploadCarImageRequest,

    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User,

    /**
     * The UserDTO model constructor.
     * @property {module:model/UserDTO}
     */
    UserDTO,

    /**
     * The UserPreference model constructor.
     * @property {module:model/UserPreference}
     */
    UserPreference,

    /**
     * The UserProfileDTO model constructor.
     * @property {module:model/UserProfileDTO}
     */
    UserProfileDTO,

    /**
     * The UserStatusDTO model constructor.
     * @property {module:model/UserStatusDTO}
     */
    UserStatusDTO,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi
};
